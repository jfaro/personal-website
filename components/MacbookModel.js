// GLTF to JSX Auto-generated by: https://github.com/pmndrs/gltfjsx

import * as THREE from 'three'
import React, { useRef } from "react";
import { useFrame } from '@react-three/fiber'
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
    const group = useRef();
    const { nodes, materials } = useGLTF("/models/macbook-pro-crypto.glb");

    const modelScale = 30;

    // Floating animation
    useFrame(state => {
        const t = state.clock.getElapsedTime();
        group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 10 + 0.25, 0.1)
        group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 10, 0.1)
        group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 4) / 20, 0.1)
        group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-5 + Math.sin(t)) / 5, 0.1)
    })

    return (
        <group ref={group} {...props} dispose={null} scale={[modelScale, modelScale, modelScale]}>
            <group position={[0.12, 0, -0.11]} rotation={[-1.92, 0, 0]}>
                <group position={[-0.12, 0, 0.11]}>
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_1.geometry}
                        material={nodes.Plane001_1.material}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_2.geometry}
                        material={materials.Logo}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_3.geometry}
                        material={nodes.Plane001_3.material}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_4.geometry}
                        material={materials["Screen-Edge"]}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_5.geometry}
                        material={materials.Screen}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_6.geometry}
                        material={materials.Lens}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_7.geometry}
                        material={materials.Glass}
                    />
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane001_8.geometry}
                        material={materials.Gray}
                    />
                </group>
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane.geometry}
                material={nodes.Plane.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_1.geometry}
                material={materials.Keys}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_2.geometry}
                material={materials["Keyt-Text"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_3.geometry}
                material={materials["Finger-Print"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_4.geometry}
                material={materials.USB}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_5.geometry}
                material={nodes.Plane_5.material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane_6.geometry}
                material={materials.Matte}
            />
        </group>
    );
}

useGLTF.preload("/models/macbook-pro-crypto.glb");